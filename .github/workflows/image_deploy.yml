name: Deployment Pipeline
on:
  workflow_dispatch:
    inputs:
      region:
        description: 'AWS Region to deploy to'
        type: string
        required: true
        default: us-east-1
      namespace:
        description: 'Application to deploy to'
        type: choice
        required: true
        default: jarvis-demo
        options:
          - askcto
          - jarvis-demo

permissions:
  id-token: write 
  contents: read

jobs:
  deploy:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    env:
      SAAS_EKS_CLUSTER_NAME: ascending-s-api-cluster
      ASKCTO_EKS_CLUSTER_NAME: ascending-askcto-cluster
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: latest

      - name: Set IAM role to assume
        id: set-role
        run: |
          if [[ "${{ inputs.namespace }}" == "askcto" ]]; then
            echo "role=${{ secrets.ASC_AWS_DEPLOY_ROLE_ARN }}" >> $GITHUB_OUTPUT
          else
            echo "role=${{ secrets.SAAS_AWS_DEPLOY_ROLE_ARN }}" >> $GITHUB_OUTPUT
          fi

      - name: Assume IAM role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ steps.set-role.outputs.role }}
          role-session-name: deployment-role-session
          aws-region: ${{ inputs.region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registries: "897729109735"

      - name: Update kubeconfig
        run: |
          if [[ "${{ inputs.namespace }}" == "askcto" ]]; then
            aws eks update-kubeconfig --name ${{ env.ASKCTO_EKS_CLUSTER_NAME }} --region ${{ inputs.region }}
          else
            aws eks update-kubeconfig --name ${{ env.SAAS_EKS_CLUSTER_NAME }} --region ${{ inputs.region }}
          fi

      - name: Update perplexity MCP server on EKS
        env:
          image: ${{ steps.login-ecr.outputs.registry }}/jarvis/perplexity_mcp_server:latest
        run: kubectl set image deploy/perplexity-mcp perplexity-mcp=$image -n ${{ inputs.namespace  }}

      - name: Patch Deployment image
        run: |
          kubectl -n ${{ inputs.namespace }} set image deploy/perplexity-mcp perplexity-mcp=${{ steps.img.outputs.uri }}

      - name: Rollout status
        run: |
          kubectl -n ${{ inputs.namespace }} rollout status deploy/perplexity-mcp